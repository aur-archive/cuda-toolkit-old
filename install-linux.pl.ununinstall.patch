--- pkg/install-linux.pl	2009-07-15 06:24:28.000000000 +0900
+++ pkg/install-linux.pl.fix	2009-07-28 22:00:56.000000000 +0900
@@ -9,96 +9,6 @@
  
 my %CmdLineOption;
 
-sub uninstallCuda {
-    my ($uninstallPath) = @_;
-
-    # bin
-    system( "rm -rfv $uninstallPath/bin2c"  );
-    system( "rm -rfv $uninstallPath/cudafe"  );
-    system( "rm -rfv $uninstallPath/fatbin"  );
-    system( "rm -rfv $uninstallPath/filehash"  );
-    system( "rm -rfv $uninstallPath/nvcc"  );
-    system( "rm -rfv $uninstallPath/nvcc.profile"  );
-    system( "rm -rfv $uninstallPath/ptxas"  );
-
-    # doc
-    system( "rm -rfv $uninstallPath/../doc/cublas_library.pdf"  );
-    system( "rm -rfv $uninstallPath/../doc/cublas_library.txt"  );
-    system( "rm -rfv $uninstallPath/../doc/cuda_profiler.txt" );
-    system( "rm -rfv $uninstallPath/../doc/CUDA_Programming_Guide.pdf" );
-    system( "rm -rfv $uninstallPath/../doc/cufft_library.pdf" );
-    system( "rm -rfv $uninstallPath/../doc/cufft_library.txt" );
-    system( "rm -rfv $uninstallPath/../doc/nvcc.pdf" );
-    system( "rm -rfv $uninstallPath/../doc/release_notes.txt" );
-    system( "rm -rfv $uninstallPath/../doc/EULA.txt" );
-
-    system( "rm -rfv $uninstallPath/../doc/CUBLAS_Library*" );
-    system( "rm -rfv $uninstallPath/../doc/CUDA_Profiler*" );
-    system( "rm -rfv $uninstallPath/../doc/CUDA_Programming_Guide*" );
-    system( "rm -rfv $uninstallPath/../doc/CUFFT_Library*" );
-    system( "rm -rfv $uninstallPath/../doc/NVCC*" );
-    system( "rm -rfv $uninstallPath/../doc/CUDA_Release_Notes*" );
-    system( "rm -rfv $uninstallPath/../doc/CUDA_Programming_Guide_Revision_History*" );
-    system( "rm -rfv $uninstallPath/../doc/README.txt" );
-
-    # include
-    system( "rm -rfv $uninstallPath/../include/builtin_types.h");
-    system( "rm -rfv $uninstallPath/../include/channel_descriptor.h");
-    system( "rm -rfv $uninstallPath/../include/common_functions.h");
-    system( "rm -rfv $uninstallPath/../include/crt");
-    system( "rm -rfv $uninstallPath/../include/cublas.h");
-    system( "rm -rfv $uninstallPath/../include/cuComplex.h");
-    system( "rm -rfv $uninstallPath/../include/cudaD3D9.h");
-    system( "rm -rfv $uninstallPath/../include/cuda_d3d9_interop.h");
-    system( "rm -rfv $uninstallPath/../include/__cudaFatFormat.h");
-    system( "rm -rfv $uninstallPath/../include/cudaGL.h");
-    system( "rm -rfv $uninstallPath/../include/cuda_gl_interop.h");
-    system( "rm -rfv $uninstallPath/../include/cuda.h");
-    system( "rm -rfv $uninstallPath/../include/cuda_runtime_api.h");
-    system( "rm -rfv $uninstallPath/../include/cuda_runtime.h");
-    system( "rm -rfv $uninstallPath/../include/cufft.h");
-    system( "rm -rfv $uninstallPath/../include/device_functions.h");
-    system( "rm -rfv $uninstallPath/../include/device_launch_parameters.h");
-    system( "rm -rfv $uninstallPath/../include/driver_types.h");
-    system( "rm -rfv $uninstallPath/../include/host_defines.h");
-    system( "rm -rfv $uninstallPath/../include/math_constants.h");
-    system( "rm -rfv $uninstallPath/../include/math_functions_dbl_ptx1.h");
-    system( "rm -rfv $uninstallPath/../include/math_functions.h");
-    system( "rm -rfv $uninstallPath/../include/texture_fetch_functions.h");
-    system( "rm -rfv $uninstallPath/../include/texture_types.h");
-    system( "rm -rfv $uninstallPath/../include/vector_functions.h");
-    system( "rm -rfv $uninstallPath/../include/vector_types.h");
-
-    # open64
-    system( "rm -rfv $uninstallPath/../open64");
-
-    # src
-    system( "rm -rfv $uninstallPath/../src/fortran.c");
-
-    # lib
-    system( "rm -rfv $uninstallPath/../lib/libcublasemu.so*");
-    system( "rm -rfv $uninstallPath/../lib/libcublas.so*");
-    system( "rm -rfv $uninstallPath/../lib/libcudart.so*");
-    system( "rm -rfv $uninstallPath/../lib/libcuda.so*");
-    system( "rm -rfv $uninstallPath/../lib/libcufftemu.so*");
-    system( "rm -rfv $uninstallPath/../lib/libcufft.so*");
-    system( "rm -rfv $uninstallPath/../lib/libfatZip.so");
-    system( "rm -rfv $uninstallPath/../lib/libptxcomp.so");
-    system( "rm -rfv $uninstallPath/../lib/README.fatZip");
-
-    rmdir "$uninstallPath/../lib";
-    rmdir "$uninstallPath/../doc";
-    rmdir "$uninstallPath/../src";
-    rmdir "$uninstallPath/../open64";
-    rmdir "$uninstallPath/../include";
-    rmdir "$uninstallPath";
-
-    if ($uninstallPath =~ /(.*\/cuda)\/bin$/) {
-	rmdir "$1";
-    }
-
-} 
-
 ## Turn off buffering
 STDOUT->autoflush(1);
 
@@ -144,57 +53,6 @@
 }
 $prefix =~ s/~/$HOME/g;
 
-
-### Uninstall if necessary
-
-### look for previous version by looking for nvcc in the path
-my @paths = split /:/, $ENV{"PATH"};
-my $pathdir;
-my @files;
-
-### also include /usr/local just in case
-push(@paths, "/usr/local/bin");
-
-### also include /usr/local/cuda just in case
-push(@paths, "/usr/local/cuda/bin");
-
-### also push the requested path
-push(@paths, $prefix);
-
-foreach $pathdir (@paths) {
-
-    opendir(DIR, $pathdir);
-    @files = grep { /^nvcc$/ } readdir(DIR);
-
-    if ($#files == 0) {
-    	if ($ARGV[0] eq "auto") {
-		uninstallCuda($pathdir);
-	} else {
-		printf("A previous version of CUDA was found in $pathdir\n");
-	
-		my $yesno = "";
-		while ($yesno ne "yes" &&
-		       $yesno ne "no" &&
-		       $yesno ne "abort") {
-		    printf("Would you like to uninstall? (yes/no/abort): ");
-		    $yesnoline = Term::ReadLine->new("foo");
-		    $yesno = $yesnoline->readline();
-		}
-    
-		if ($yesno eq "abort") {
-		    exit(0);
-		}
-
-		if ($yesno eq "yes") {
-		    uninstallCuda($pathdir);
-		}
-	}
-    }
-
-    closedir(DIR);
-}
-
-
 ## make sure we can write the file
 system("mkdir -p $prefix && chmod 0755 $prefix") unless (-d "$prefix");
 system("touch $prefix/empty");
